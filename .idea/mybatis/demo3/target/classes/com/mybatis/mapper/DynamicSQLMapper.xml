<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.DynamicSQLMapper">


    <select id="getEmpByConditionIf" resultType="Emp">
        select * from t_emp where 1 = 1
        <if test="empName != null and empName != ''">
            emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="sex != null and sex != ''">
            and sex = #{sex}
        </if>
        <if test="email != null and email != ''">
            and email = #{email}
        </if>
    </select>

    <!--动态生成where关键字，并自动把if标签里开头的and和or关键字去掉，但是位于后面的and和or关键字不能去掉-->
    <select id="getEmpByConditionWhere" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </where>
    </select>

    <!--trim:
        prefix|suffix:在trim标签中前面或后面添加指定内容
        suffixOverrides|prefixOverrides：将trim标签前面或后面去掉指定内容-->
    <select id="getEmpByConditionTrim" resultType="Emp">
        select * from t_emp
        <trim prefix="where" suffix="" prefixOverrides="and|or" suffixOverrides="and|or">
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </trim>
    </select>

    <select id="getEmpByConditionChooseWhenOtherwise" resultType="com.mybatis.pojo.Emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName != '' and empName != null">
                    emp_name = #{empName}
                </when>
                <when test="age != '' and age != null">
                    age = #{age}
                </when>
                <when test="sex != '' and sex != null">
                    sex = #{sex}
                </when>
                <when test="email != '' and email != null">
                    email = #{email}
                </when>
                <otherwise>
                    did = 1
                </otherwise>
            </choose>
        </where>
    </select>

    <!--    <delete id="foreachDeleteMoreByArray">-->
<!--        delete from t_emp where eid in-->
<!--        (-->
<!--            <foreach collection="eids" item="eid" separator=",">-->
<!--                #{eid}-->
<!--            </foreach>-->
<!--        )-->
<!--    </delete>-->

<!--    foreach
        collection:设置需要循环的数组和集合
        item: 表示数组或集合中的每一个数据
        separator: 循环题之间的分割符
        open: foreach标签循环的所有内容的开始符
        close: foreach标签循环的所有内容的结束符-->
    <delete id="foreachDeleteMoreByArray">
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or" open="(" close=")">
            eid = #{eid}
        </foreach>
    </delete>

    <insert id="insertMoreByList">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null, #{emp.empName}, #{emp.age}, #{emp.sex}, #{emp.email}, null)
        </foreach>
    </insert>

    <sql id="empColumns">eid, emp_name, age, sex, email, did</sql>
    <select id="getEmpByColumns" resultType="com.mybatis.pojo.Emp">
        select <include refid="empColumns"></include> from t_emp
    </select>

</mapper>